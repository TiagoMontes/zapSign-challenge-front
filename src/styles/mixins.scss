@use 'variables' as *;

// Flexbox mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin flex-end {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  @include flex-column;
  align-items: center;
  justify-content: center;
}

// Typography mixins
@mixin text-truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin text-multiline-truncate($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Shadow mixins
@mixin elevation-1 {
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
}

@mixin elevation-2 {
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
}

@mixin elevation-3 {
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
}

@mixin elevation-4 {
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
}

@mixin elevation-5 {
  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.30), 0 15px 12px rgba(0, 0, 0, 0.22);
}

// Border radius mixins
@mixin border-radius($radius: var(--border-radius)) {
  border-radius: $radius;
}

@mixin border-radius-large {
  border-radius: var(--border-radius-large);
}

// Responsive mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: $breakpoint-xs) {
      @content;
    }
  }
  @if $breakpoint == sm {
    @media (max-width: $breakpoint-sm) {
      @content;
    }
  }
  @if $breakpoint == md {
    @media (max-width: $breakpoint-md) {
      @content;
    }
  }
  @if $breakpoint == lg {
    @media (max-width: $breakpoint-lg) {
      @content;
    }
  }
  @if $breakpoint == xl {
    @media (max-width: $breakpoint-xl) {
      @content;
    }
  }
}

// Animation mixins
@mixin transition($property: all, $duration: $transition-normal, $timing: ease-in-out) {
  transition: $property $duration $timing;
}

@mixin hover-lift {
  transition: transform $transition-fast, box-shadow $transition-fast;

  &:hover {
    transform: translateY(-2px);
    @include elevation-2;
  }
}

// Button mixins
@mixin button-reset {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  cursor: pointer;
  outline: none;

  &:focus {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
  }
}

@mixin button-primary {
  background-color: var(--primary-color);
  color: white;
  border: 1px solid var(--primary-color);
  padding: $button-padding;
  height: $button-height;
  @include border-radius;
  @include transition;

  &:hover:not(:disabled) {
    background-color: var(--primary-color-dark);
    border-color: var(--primary-color-dark);
  }

  &:disabled {
    background-color: var(--text-disabled);
    border-color: var(--text-disabled);
    cursor: not-allowed;
  }
}

// Form mixins
@mixin form-field {
  width: 100%;
  padding: $input-padding;
  height: $input-height;
  border: 1px solid var(--divider-color);
  @include border-radius;
  @include transition;

  &:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px rgba(25, 118, 210, 0.1);
  }

  &:disabled {
    background-color: var(--background-color);
    color: var(--text-disabled);
    cursor: not-allowed;
  }

  &::placeholder {
    color: var(--text-secondary);
  }
}

// Card mixins
@mixin card {
  background-color: var(--surface-color);
  @include border-radius;
  @include elevation-1;
  padding: $spacing-lg;
}

@mixin card-hover {
  @include card;
  @include transition;
  cursor: pointer;

  &:hover {
    @include elevation-2;
  }
}

// Loading state mixins
@mixin loading-skeleton {
  background: linear-gradient(90deg, #f0f0f0 25%, transparent 37%, #f0f0f0 63%);
  background-size: 400% 100%;
  animation: skeleton-loading 1.4s ease-in-out infinite;
}

@keyframes skeleton-loading {
  0% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0 50%;
  }
}